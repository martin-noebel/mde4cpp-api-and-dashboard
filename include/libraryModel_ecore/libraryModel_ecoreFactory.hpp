//********************************************************************
//*    
//* Warning: This file was generated by ecore4CPP Generator
//*
//********************************************************************

#ifndef LIBRARYMODEL_ECOREFACTORY_HPP
#define LIBRARYMODEL_ECOREFACTORY_HPP
// namespace macro header include
#include "libraryModel_ecore/libraryModel_ecore.hpp"

#include <map>
#include <memory>

#include "abstractDataTypes/SubsetUnion.hpp"
#include "ecore/EFactory.hpp"
#include "libraryModel_ecore/libraryModel_ecorePackage.hpp"

namespace libraryModel_ecore 
{
	class libraryModel_ecorePackage;
}



namespace libraryModel_ecore 
{
	class LIBRARYMODEL_ECORE_API libraryModel_ecoreFactory : virtual public ecore::EFactory 
	{
		private:    
			libraryModel_ecoreFactory(libraryModel_ecoreFactory const&) = delete;
			libraryModel_ecoreFactory& operator=(libraryModel_ecoreFactory const&) = delete;
		protected:
			libraryModel_ecoreFactory(){}
		
			//Singleton Instance and Getter
			private:
				static std::shared_ptr<libraryModel_ecoreFactory> instance;
			public:
				static std::shared_ptr<libraryModel_ecoreFactory> eInstance();
		
			//Creator functions
			virtual std::shared_ptr<ecore::EObject> create(std::string _className,  std::shared_ptr<ecore::EObject> container=nullptr, const int referenceID = -1) const = 0;
			virtual std::shared_ptr<ecore::EObject> create(const int classID,  std::shared_ptr<ecore::EObject> container = nullptr, const int referenceID = -1) const = 0;
			virtual std::shared_ptr<ecore::EObject> create(std::shared_ptr<ecore::EClass> _class, std::shared_ptr<EObject> _container=nullptr, const int referenceID = -1) const = 0;

			virtual std::shared_ptr<Author> createAuthor(const int metaElementID = libraryModel_ecorePackage::AUTHOR_CLASS) const = 0;
			//Add as contained object
			virtual std::shared_ptr<Author> createAuthor_as_authors_in_LibraryModel(std::weak_ptr<libraryModel_ecore::LibraryModel> par_LibraryModel, const int metaElementID = libraryModel_ecorePackage::AUTHOR_CLASS) const = 0;
			virtual std::shared_ptr<Book> createBook(const int metaElementID = libraryModel_ecorePackage::BOOK_CLASS) const = 0;
			//Add as contained object
			virtual std::shared_ptr<Book> createBook_as_book_in_LibraryModel(std::weak_ptr<libraryModel_ecore::LibraryModel> par_LibraryModel, const int metaElementID = libraryModel_ecorePackage::BOOK_CLASS) const = 0;
			virtual std::shared_ptr<LibraryModel> createLibraryModel(const int metaElementID = libraryModel_ecorePackage::LIBRARYMODEL_CLASS) const = 0;
			virtual std::shared_ptr<NamedElement> createNamedElement(const int metaElementID = libraryModel_ecorePackage::NAMEDELEMENT_CLASS) const = 0;
			virtual std::shared_ptr<Picture> createPicture(const int metaElementID = libraryModel_ecorePackage::PICTURE_CLASS) const = 0;
			//Add as contained object
			virtual std::shared_ptr<Picture> createPicture_as_pictures_in_Book(std::weak_ptr<libraryModel_ecore::Book> par_Book, const int metaElementID = libraryModel_ecorePackage::PICTURE_CLASS) const = 0;
			
	};
}
#endif /* end of include guard: LIBRARYMODEL_ECOREFACTORY_HPP */
